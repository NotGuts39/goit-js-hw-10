{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-gallery.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate;\nlet countdownInterval;\n\nconst startButton = document.getElementById(\"start-button\");\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    \n\n    \n    if (userSelectedDate <= new Date()) {\n      \n      iziToast.error({\n      message: 'Please choose a date in the future',\n      position: 'topRight'\n});\n      \n      startButton.disabled = true;\n    }\n    \n    else {\n      \n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\n\ndocument.getElementById(\"start-button\").addEventListener(\"click\", startCountdown);\n\n\nfunction startCountdown() {\n  \n startButton.disabled = true;\n\n  clearInterval(countdownInterval);\n\n  countdownInterval = setInterval(function () {\n    const timeDifference = userSelectedDate - new Date();\n\n    if (timeDifference <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerValues({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      iziToast.error({\n  \n        message: 'Countdown has reached zero',\n  position: 'topRight'\n});\n      \n    } else {\n      const timeObject = convertMs(timeDifference);\n      updateTimerValues(timeObject);\n    }\n  }, 1000);\n}\n\nfunction updateTimerValues({ days, hours, minutes, seconds }) {\n  document.querySelector('.value[data-days]').textContent = days < 10 ? '0' + days : days;\n  document.querySelector('.value[data-hours]').textContent = hours < 10 ? '0' + hours : hours;\n  document.querySelector('.value[data-minutes]').textContent = minutes < 10 ? '0' + minutes : minutes;\n  document.querySelector('.value[data-seconds]').textContent = seconds < 10 ? '0' + seconds : seconds;\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["userSelectedDate","countdownInterval","startButton","options","selectedDates","iziToast","flatpickr","startCountdown","timeDifference","updateTimerValues","timeObject","convertMs","days","hours","minutes","seconds","ms"],"mappings":"sGAKA,IAAIA,EACAC,EAEJ,MAAMC,EAAc,SAAS,eAAe,cAAc,EAC1DA,EAAY,SAAW,GAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,GAK7BJ,GAAoB,IAAI,MAE1BK,EAAS,MAAM,CACf,QAAS,qCACT,SAAU,UAChB,CAAC,EAEKH,EAAY,SAAW,IAKvBA,EAAY,SAAW,EAE1B,CACH,EAEAI,EAAU,mBAAoBH,CAAO,EAGrC,SAAS,eAAe,cAAc,EAAE,iBAAiB,QAASI,CAAc,EAGhF,SAASA,GAAiB,CAEzBL,EAAY,SAAW,GAEtB,cAAcD,CAAiB,EAE/BA,EAAoB,YAAY,UAAY,CAC1C,MAAMO,EAAiBR,EAAmB,IAAI,KAE9C,GAAIQ,GAAkB,EACpB,cAAcP,CAAiB,EAC/BQ,EAAkB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC/DJ,EAAS,MAAM,CAEb,QAAS,6BACf,SAAU,UACZ,CAAC,MAEU,CACL,MAAMK,EAAaC,EAAUH,CAAc,EAC3CC,EAAkBC,CAAU,CAC7B,CACF,EAAE,GAAI,CACT,CAEA,SAASD,EAAkB,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC5D,SAAS,cAAc,mBAAmB,EAAE,YAAcH,EAAO,GAAK,IAAMA,EAAOA,EACnF,SAAS,cAAc,oBAAoB,EAAE,YAAcC,EAAQ,GAAK,IAAMA,EAAQA,EACtF,SAAS,cAAc,sBAAsB,EAAE,YAAcC,EAAU,GAAK,IAAMA,EAAUA,EAC5F,SAAS,cAAc,sBAAsB,EAAE,YAAcC,EAAU,GAAK,IAAMA,EAAUA,CAC9F,CAEA,SAASJ,EAAUK,EAAI,CAMrB,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAC1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EACpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EACjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}